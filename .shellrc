#!/bin/bash

if ! echo "$PATH" | grep -q ".local/bin" ; then
    export PATH=$HOME/.local/bin:$PATH
fi

if ! echo "$PATH" | grep -q ".krew/bin" && [[ -d ${HOME}/.krew/bin ]] ; then
    export PATH="${PATH}:${HOME}/.krew/bin"
fi

#
# Integrate useful tools if they are present
#

function cmdExists() {
    command -v "$1" >/dev/null 2>&1
}

if cmdExists vim; then
    export EDITOR="vim"
    export VISUAL="vim"
fi

if cmdExists bat; then
    BAT_CMD=bat
elif cmdExists batcat; then
    BAT_CMD=batcat
fi

if [[ -n $BAT_CMD ]]; then
    alias cat="$BAT_CMD"
    export BAT_STYLE=changes
    export BAT_PAGER=less # 'most' has some problems with the escape sequences
    if man --help 2>&1 | grep -q mandoc ; then                
        export MANPAGER="$HOME/.local/bin/df-batman.sh"       
    else                                                      
        export MANPAGER="sh -c 'col -bx | $BAT_CMD -l man -p'"
    fi                                                        
    export PAGER="$BAT_CMD"
fi

if (cmdExists delta && cmdExists git); then
    git config --global --replace-all core.pager delta
    git config --global --replace-all interactive.diffFilter "delta --color-only --features=interactive"
fi


if cmdExists rg; then
    export FZF_DEFAULT_COMMAND='rg --files --hidden -g "!.git/"'
    export FZF_CTRL_T_COMMAND="$FZF_DEFAULT_COMMAND"
fi

if cmdExists exa; then
    LS_CMD='exa --color=auto'
    LL_CMD="$LS_CMD -lbFagh --extended --git --group-directories-first --color-scale"
    LLM_CMD="$LS_CMD -lbFagh --extended --git --sort=modified --reverse --color-scale"
    LL_UNSORTED_CMD="$LS_CMD -lbFagh --extended --git --sort=none --color-scale"
    alias tree='exa --tree --level=2 --color=auto'
else
    LS_CMD='ls -F --color=tty'
    LL_CMD="$LS_CMD -lah --group-directories-first" 
    LLM_CMD="$LS_CMD -lah --sort=time"
    LL_UNSORTED_CMD="$LS_CMD -lah -U"
fi
alias ls="$LS_CMD"
alias ll="$LL_CMD" 
alias llm="$LLM_CMD"
alias wll="watch --color -d $LL_CMD"
alias wllm="watch --color -d $LLM_CMD"


if cmdExists nvim && (nvim --version | head -n 1 | grep -v -q -E '0\.[123]\.') ; then
    alias vim='nvim'
fi


if cmdExists yt-dlp; then
    alias ytdl='yt-dlp'
elif cmdExists youtube-dl; then
    alias ytdl='youtube-dl'
else
    alias ytdl='echo yt-dlp not installed'
fi


#
# functions -------
#

function youtubeDownloadAudio {
    local url="$1"
    url=$(echo -n "$url" | sed -r 's#^(https?://)m\.(youtube)#\1www.\2#')

    ytdl --extract-audio --audio-format best "$url"
}



# Workaround for 'vagrant ssh' in cygwin
export VAGRANT_PREFER_SYSTEM_BIN=1


#export LSCOLORS="Hxfxcxdxbxegedabagacad"
#export LS_COLORS="di=1;37:ln=35:so=32:pi=33:ex=31:bd=34;46:cd=34;43:su=30;41:sg=30;46:tw=30;42:ow=30;43"
export LS_COLORS="no=00:fi=00:di=01;37:ln=00;36:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=41;33;01:ex=00;32:*.cmd=00;32:*.exe=01;32:*.com=01;32:*.bat=01;32:*.btm=01;32:*.dll=01;32:*.tar=00;31:*.tbz=00;31:*.tgz=00;31:*.rpm=00;31:*.deb=00;31:*.arj=00;31:*.taz=00;31:*.lzh=00;31:*.lzma=00;31:*.zip=00;31:*.zoo=00;31:*.z=00;31:*.Z=00;31:*.gz=00;31:*.bz2=00;31:*.tb2=00;31:*.tz2=00;31:*.tbz2=00;31:*.avi=01;35:*.bmp=01;35:*.fli=01;35:*.gif=01;35:*.jpg=01;35:*.jpeg=01;35:*.mng=01;35:*.mov=01;35:*.mpg=01;35:*.pcx=01;35:*.pbm=01;35:*.pgm=01;35:*.png=01;35:*.ppm=01;35:*.tga=01;35:*.tif=01;35:*.xbm=01;35:*.xpm=01;35:*.dl=01;35:*.gl=01;35:*.wmv=01;35:*.aiff=00;32:*.au=00;32:*.mid=00;32:*.mp3=00;32:*.ogg=00;32:*.voc=00;32:*.wav=00;32:"

#
# aliases ---------
#


alias kgall="kubectl get all,ing,pv,pvc"
alias kgallw="kubectl get all,ing,pv,pvc -o wide"
alias mydstat="dstat -lcdfmnp -C total --disk-util"
alias sk="screenkey --font 'DejaVu Sans Mono Bold' --timeout 4 --mouse"
alias ugi="ug -Q"

# Aliases for managing this dotfile collection
alias cfg='git --git-dir=$HOME/.dotfiles/ --work-tree=$HOME'
alias cfgf='cfg fetch origin'
alias cfgl='cfg pull origin'
alias cfgs='cfg status --branch'
alias cfgls="cfg ls-tree --name-only -r --full-tree HEAD $HOME | xargs $LL_UNSORTED_CMD"
alias cfga='cfg add'
alias cfgd='cfg diff'
alias cfgc='cfg commit -v'
alias cfgp='cfg push origin'
alias cfglog='cfg log --oneline --decorate --graph --all'
alias cfgu='curl -Lks https://git.io/crdotfiles | bash' # Update installation
alias cfgei='vim ~/.local/bin/df-install.sh'
alias cfgai='cfg add ~/.local/bin/df-install.sh'

if [[ "$FORGIT_INSTALL_DIR" != "" ]] ; then
  alias cfgilog='cfg forgit log'
  alias cfgid='cfg forgit diff'
  alias cfgia='cfg forgit add'
  alias cfgii='cfg forgit ignore'

  alias gilo='git forgit log'
  alias gid='git forgit diff'
  alias gia='git forgit add'
  alias girh='git forgit reset_head'
  alias gi='gir forgit ignore'
  alias gicf='git forgit restore'
  alias giclean='git forgit clean'
  alias giss='git forgit stash_show'
fi

# Can't remember all those aliases? Use this to search through them
alias ag='alias | grep'

# Commit, defaulting to the message of the previous commit
# Useful for multiple commits on the same ticket/issue
alias gch='git commit -v -c HEAD'
# Exit the credential cache to make it forget the bad password I just entered
alias gce='git credential-cache exit'

alias s="sudo"
alias se="sudoedit"
alias psa="ps auxf"
alias open="xdg-open"

# df+mount listing only physical volumes (TODO: also filter out snap and docker loop mounts)
alias dfp="df -h | grep -v -E '^(tmpfs|none|udev|/dev/loop)'"
alias mountp="mount | grep -E '^(/|\w+:)' | grep -v -E 'type (squashfs)'"

alias cpv='rsync -ah --info=progress2'

alias tf="terraform"

alias yta='youtubeDownloadAudio'
alias vw='vim +TiddlyWikiEditTiddler'
alias vj='vim +TiddlyWikiEditJournal'

alias httpbin="docker run -p 80:80 kennethreitz/httpbin"
alias httpbin_with_log="docker run -p 80:80 -e GUNICORN_CMD_ARGS=\"--capture-output --error-logfile - --access-logfile - --access-logformat '%(h)s %(t)s %(r)s %(s)s Host: %({Host}i)s'\" kennethreitz/httpbin"

# SSH to a VM that might have the IP of a previous connection, but a different host key
alias sshvm='ssh -o stricthostkeychecking=no -o addkeystoagent=no'

# Options for shellcheck (https://github.com/koalaman/shellcheck)
# --check-sourced: Include warnings from sourced files
# --external-sources: Allow 'source' outside of FILES
# -e SC1090: ignore "Cannot follow dynamically sourced file"
# -e SC2034: ignore "Variable X seems unused"
export SHELLCHECK_OPTS="--check-sourced --external-sources -e SC1090 -e SC2034"

# Default settings for bc
export BC_ENV_ARGS="$HOME/.bc"

# Spin up a simple web server serving the current directory statically on port 8000
function htserve() {
  if command -v ruby >/dev/null 2>&1 ; then
    ruby -run -ehttpd . -p8000
  elif command -v python3 >/dev/null 2>&1 ; then
    python3 -m http.server 8000
  elif command -v python >/dev/null 2>&1 ; then
    python -m http.server 8000
# busybox didn't work for me
#  elif command -v busybox >/dev/null 2>&1 ; then
#    busybox httpd -f -p 8000
  fi
}


# Fix for tilix (see https://gnunn1.github.io/tilix-web/manual/vteconfig/)
if [ $TILIX_ID ] || [ $VTE_VERSION ]; then
    source /etc/profile.d/vte.sh
fi

if [[ -f /home/linuxbrew/.linuxbrew/bin/brew ]] ; then
    eval "$(/home/linuxbrew/.linuxbrew/bin/brew shellenv)"
fi
